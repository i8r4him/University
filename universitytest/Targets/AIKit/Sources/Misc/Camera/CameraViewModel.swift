//
//  CameraViewModel.swift
//  AIKit (Generated by SwiftyLaunch 1.5.0)
//  https://docs.swiftylaun.ch/module/aikit/ai-vision-example
//

import AVFoundation
import AnalyticsKit
import Combine
import SharedKit
import SwiftUI

// The View Name for Analytics Capture (in this case view model)
private let viewName = "CameraViewModel"

class CameraViewModel: ObservableObject {

	// Reference to the CameraManager.
	@ObservedObject var cameraManager = CameraManager()

	// Published property to store the captured image
	@Published var capturedImage: UIImage?

	// Reference to the AVCaptureSession.
	var session: AVCaptureSession = .init()

	// Cancellable storage for Combine subscribers.
	private var cancelables = Set<AnyCancellable>()

	private var cameraDelegate: CameraDelegate?

	init() {
		/// Initialize the session with the cameraManager's session.
		session = cameraManager.session
	}

	deinit {
		/// Deinitializer to stop capturing when the ViewModel is deallocated.
		cameraManager.stopCapturing()
	}

	/// Should be best done after we got camera permissions, but we have another check in here.
	func configureCameraSession() {
		Analytics.capture(.info, id: "should_configure_camera_session", source: .aikit, fromView: viewName)
		askUserFor(.cameraAccess) {
			self.cameraManager.configureCaptureSession()
		} onDismiss: {
			showInAppNotification(
				.error,
				content: .init(
					title: "Camera Access Denied", message: "Please allow camera access to use this feature.")
			)
		}
	}

	/// Flip between front and back camera
	func flipCamera() {
		cameraManager.position = cameraManager.position == .back ? .front : .back
		cameraManager.resetVideoInput()
		Analytics.capture(
			.info, id: "flipped_camera_to_\(cameraManager.position == .back ? "back" : "front")", source: .aikit,
			fromView: viewName)
	}

	/// Setup Combine bindings for handling publisher's emit values
	func setupBindings() {
		cameraManager.$capturedImage.sink { [weak self] image in
			self?.capturedImage = image
		}.store(in: &cancelables)
	}

	/// Capture an image
	func captureImage() {
		Analytics.capture(.info, id: "should_capture_image", source: .aikit, fromView: viewName)
		cameraManager.captureImage()
	}
}
